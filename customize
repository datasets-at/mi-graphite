#!/usr/bin/bash
#
# Put customizations to your image in this file.

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Exit if any commands fail
set -o errexit

# Ensure we have updated standard packages
echo "* Updating standard packages.";
pkg_delete -v nodejs smtools
pkg_add -v nodejs smtools dtracetools htop
npm install smartdc -g
npm install jsontool -g

# Install Graphite packages
echo "* Installing Graphite with pip."
pip install whisper==0.9.12
pip install carbon==0.9.12
pip install graphite-web==0.9.12

# Install Gunicorn
pip install gunicorn==18.0

# Setup configs
cd /opt/graphite/conf/
CONFIG_FILES=(
	# carbon:
	aggregation-rules.conf
	blacklist.conf
	carbon.amqp.conf
	#carbon.conf
	relay-rules.conf
	rewrite-rules.conf
	storage-aggregation.conf
	#storage-schemas.conf
	whitelist.conf
	# graphite:
	dashboard.conf
	graphTemplates.conf
)
for f in "${CONFIG_FILES[@]}"; do
	echo "* Deploy example config: $f"
	cp $f.example $f
done
mv graphite.wsgi.example graphite_wsgi.py
cd -

# Create database
cd /opt/graphite/webapp/graphite
cp local_settings.py.example local_settings.py
python manage.py syncdb --noinput
cd -
chown -R www:www /opt/graphite/storage/

# Import and enable smf manifests
svccfg import /etc/carbon-cache.xml
svccfg import /etc/gunicorn.xml
rm /etc/carbon-cache.xml /etc/gunicorn.xml

# Configuring image specific packages
echo "* Configuring image specific packages.";

# Clean up
echo "* Cleaning up."
rm -rf /root/*

# Prepare image for provisioning
sm-prepare-image -y
